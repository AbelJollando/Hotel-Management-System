import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.sql.*;
import Project.*;
import java.awt.Color;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author ABEL
 */
public class CustBill extends javax.swing.JFrame {

    /**
     * Creates new form CustBill
     */
    public CustBill() {
        initComponents();
        SimpleDateFormat MyFormat = new SimpleDateFormat("YYYY-MM-dd");
        Calendar cal = Calendar.getInstance();
        SearchCheckOut.setText(MyFormat.format(cal.getTime()));
    }
        public void filterAngka (KeyEvent angka){
        if(Character.isAlphabetic(angka.getKeyChar())){
            angka.consume();
            //Tampilan peringatan jika user memasukkan karakter yang bukan angka
            JOptionPane.showMessageDialog(null, "Numeric Only!", "Warning!", JOptionPane.WARNING_MESSAGE);       
        }
    }
        public void filterSpace (KeyEvent space){
        if(Character.isWhitespace(space.getKeyChar())){
            space.consume();
            //Tampilan peringatan jika user menginputkan spasi
            JOptionPane.showMessageDialog(null, "No Spacing", "Warning!", JOptionPane.WARNING_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        SearchCheckOut = new javax.swing.JTextField();
        SearchButton = new javax.swing.JLabel();
        ExportButton = new javax.swing.JLabel();
        backButton = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jScrollPane1.setBackground(new java.awt.Color(229, 155, 132));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createMatteBorder(3, 3, 3, 3, new java.awt.Color(229, 155, 132)));

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setBackground(new java.awt.Color(229, 155, 132));
        jTable1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jTable1.setFont(new java.awt.Font("Segoe UI Historic", 0, 14)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Full Name", "Phone Number", "Nationality", "Gender", "ID Proof", "Address", "CheckIn", "RoomNo", "Bed Type", "Room Type", "Price", "Number Of Days", "Total Amount", "CheckOut"
            }
        ));
        jTable1.setToolTipText("");
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jTable1.setSelectionBackground(new java.awt.Color(229, 155, 132));
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, 900, 300));

        SearchCheckOut.setBackground(new java.awt.Color(131, 44, 44));
        SearchCheckOut.setFont(new java.awt.Font("Segoe UI Historic", 0, 20)); // NOI18N
        SearchCheckOut.setForeground(new java.awt.Color(255, 255, 255));
        SearchCheckOut.setBorder(null);
        SearchCheckOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchCheckOutMouseClicked(evt);
            }
        });
        SearchCheckOut.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                SearchCheckOutKeyTyped(evt);
            }
        });
        getContentPane().add(SearchCheckOut, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 110, 450, 30));

        SearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Search Button.png"))); // NOI18N
        SearchButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        SearchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                SearchButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                SearchButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                SearchButtonMouseExited(evt);
            }
        });
        getContentPane().add(SearchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 160, -1, 40));

        ExportButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/Export Button.png"))); // NOI18N
        ExportButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ExportButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ExportButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                ExportButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                ExportButtonMouseExited(evt);
            }
        });
        getContentPane().add(ExportButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1100, 210, -1, 40));

        backButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/CheckIn_BackButton.png"))); // NOI18N
        backButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                backButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                backButtonMouseExited(evt);
            }
        });
        getContentPane().add(backButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(1340, 0, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Gambar/CusBill.png"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        ResultSet rs=Select.getData("select *from customer where checkOut is not NULL");
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        try
        {
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13), rs.getString(14), rs.getString(15)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_formComponentShown

    private void backButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseClicked
        // TODO add your handling code here:
        dispose();
        Menu menu = new Menu();
        menu.setLocationRelativeTo(null);
        menu.setVisible(true);
    }//GEN-LAST:event_backButtonMouseClicked

    private void backButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseEntered
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(1,1,1,1, new Color(255, 225, 255));
        backButton.setBorder(IconBorder);
        backButton.setForeground(new Color(255, 225, 255));
    }//GEN-LAST:event_backButtonMouseEntered

    private void backButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backButtonMouseExited
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(0,0,0,0, Color.white);
        backButton.setBorder(IconBorder);
        backButton.setForeground(Color.white);
    }//GEN-LAST:event_backButtonMouseExited

    private void SearchCheckOutKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_SearchCheckOutKeyTyped
        // TODO add your handling code here:
        filterAngka(evt);
        filterSpace(evt);
    }//GEN-LAST:event_SearchCheckOutKeyTyped

    private void SearchCheckOutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchCheckOutMouseClicked
        // TODO add your handling code here:
        SearchCheckOut.setText("");
    }//GEN-LAST:event_SearchCheckOutMouseClicked

    private void SearchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchButtonMouseClicked
        // TODO add your handling code here:
         String CheckOutDate=SearchCheckOut.getText();
        ResultSet rs=Select.getData("select *from customer where checkOut='"+CheckOutDate+"'");
        DefaultTableModel model=(DefaultTableModel)jTable1.getModel();
        model.setRowCount(0);
        try
        {
            while(rs.next())
            {
                model.addRow(new Object[]{rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10),rs.getString(11),rs.getString(12),rs.getString(13), rs.getString(14), rs.getString(15)});
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_SearchButtonMouseClicked

    private void SearchButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchButtonMouseEntered
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(1,1,1,1, new Color(255, 225, 255));
        SearchButton.setBorder(IconBorder);
        SearchButton.setForeground(new Color(255, 225, 255));
    }//GEN-LAST:event_SearchButtonMouseEntered

    private void SearchButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_SearchButtonMouseExited
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(0,0,0,0, Color.white);
        SearchButton.setBorder(IconBorder);
        SearchButton.setForeground(Color.white);
    }//GEN-LAST:event_SearchButtonMouseExited

    private void ExportButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportButtonMouseExited
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(1,1,1,1, new Color(255, 225, 255));
        ExportButton.setBorder(IconBorder);
        ExportButton.setForeground(new Color(255, 225, 255));
    }//GEN-LAST:event_ExportButtonMouseExited

    private void ExportButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportButtonMouseEntered
        // TODO add your handling code here:
        Border IconBorder = BorderFactory.createMatteBorder(0,0,0,0, Color.white);
        ExportButton.setBorder(IconBorder);
        ExportButton.setForeground(Color.white);
    }//GEN-LAST:event_ExportButtonMouseEntered

    private void ExportButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ExportButtonMouseClicked
        // TODO add your handling code here:
        int index=jTable1.getSelectedRow();
        TableModel model=jTable1.getModel();
        String id=model.getValueAt(index,0).toString();
        try
        {
            if((new File("D:\\"+id+".pdf")).exists())
            {
                Process p =Runtime
                        .getRuntime()
                        .exec("rundll32 url.dll,FileProtocolHandler D:\\"+id+".pdf");
            }
            else
            {
                JOptionPane.showMessageDialog(null, "File Doesn't Exist");
            }
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e);
        }       
    }//GEN-LAST:event_ExportButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CustBill.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CustBill().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ExportButton;
    private javax.swing.JLabel SearchButton;
    private javax.swing.JTextField SearchCheckOut;
    private javax.swing.JLabel backButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
